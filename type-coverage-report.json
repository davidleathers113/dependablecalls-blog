{
  "timestamp": "2025-07-29T16:08:39.374Z",
  "success": true,
  "errors": [],
  "warnings": [
    "Type tests failed for src/types/__tests__/**/*.test.ts: Command failed: npx vitest run \"src/types/__tests__/**/*.test.ts\" --reporter=verbose\nNo test files found, exiting with code 1\n\nfilter: src/types/__tests__/**/*.test.ts\ninclude: src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}\nexclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*\n\n",
    "Type tests failed for src/hooks/__tests__/**/*.types.test.ts: Command failed: npx vitest run \"src/hooks/__tests__/**/*.types.test.ts\" --reporter=verbose\nNo test files found, exiting with code 1\n\nfilter: src/hooks/__tests__/**/*.types.test.ts\ninclude: src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}\nexclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*\n\n",
    "Type tests failed for src/store/__tests__/**/*.types.test.ts: Command failed: npx vitest run \"src/store/__tests__/**/*.types.test.ts\" --reporter=verbose\nNo test files found, exiting with code 1\n\nfilter: src/store/__tests__/**/*.types.test.ts\ninclude: src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}\nexclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*\n\n"
  ],
  "fileIssues": [],
  "config": {
    "minCoverage": 95,
    "ignorePaths": [
      "node_modules/**",
      "dist/**",
      "build/**",
      "**/*.test.ts",
      "**/*.test.tsx",
      "src/test/**",
      "**/*.d.ts",
      "vite.config.ts",
      "tailwind.config.js"
    ],
    "strictMode": true,
    "failOnError": true
  },
  "summary": {
    "totalErrors": 0,
    "totalWarnings": 3,
    "coverageMet": false
  }
}