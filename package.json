{
  "name": "dce-website",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "type-check": "tsc --noEmit",
    "type-check:comprehensive": "tsx scripts/check-types.ts",
    "type-check:coverage": "tsx scripts/check-types.ts --min-coverage 95",
    "type-check:ci": "tsx scripts/check-types.ts --min-coverage 90 --no-fail",
    "generate:types": "tsx scripts/generate-types.ts",
    "test": "vitest",
    "test:ci": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage --reporter=verbose",
    "test:call-tracking": "vitest run src/services/call-tracking/__tests__/unit --coverage",
    "test:load": "vitest run src/services/call-tracking/__tests__/load --reporter=verbose",
    "test:integration": "vitest run src/services/call-tracking/__tests__/integration --reporter=verbose",
    "test:encryption": "vitest run src/lib/encryption/__tests__ --coverage",
    "test:blog": "vitest run src/types/__tests__/ src/hooks/__tests__/ src/store/__tests__/ --coverage",
    "test:blog:types": "vitest run src/types/__tests__/ --coverage",
    "test:blog:hooks": "vitest run src/hooks/__tests__/ --coverage",
    "test:blog:stores": "vitest run src/store/__tests__/ --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "preview": "vite preview",
    "prepare": "husky",
    "size": "size-limit",
    "analyze": "size-limit --why",
    "migrate:encryption": "tsx scripts/migrate-encryption.ts",
    "verify:encryption": "tsx scripts/verify-encryption.ts",
    "encrypt:health": "tsx scripts/encryption-health.ts",
    "security:test": "vitest run tests/security/ --coverage --reporter=verbose",
    "security:scan": "snyk test --severity-threshold=medium",
    "security:monitor": "snyk monitor",
    "security:fix": "snyk fix",
    "security:audit": "npm audit --audit-level=moderate",
    "security:licenses": "license-checker --summary --excludePrivatePackages",
    "security:sbom": "cyclonedx-npm --output ./sbom.json",
    "security:zap": "node scripts/security/run-zap-scan.js",
    "security:zap:quick": "node scripts/security/run-zap-scan.js --scanType quick",
    "security:zap:standard": "node scripts/security/run-zap-scan.js --scanType standard",
    "security:zap:comprehensive": "node scripts/security/run-zap-scan.js --scanType comprehensive",
    "security:regression": "node scripts/security/security-regression-test.js",
    "security:baseline": "node scripts/security/generate-security-baseline.js",
    "security:gates": "node scripts/security/security-gate-evaluator.js",
    "security:report": "node scripts/security/generate-security-report.js",
    "security:monitoring": "node scripts/security/update-security-monitoring.js",
    "setup:test-accounts": "tsx scripts/setup-test-accounts.ts",
    "setup:blog-authors": "tsx scripts/create-blog-authors.ts",
    "seed:blog-content": "tsx scripts/seed-blog-content.ts",
    "setup:blog": "bash scripts/setup-blog-supabase.sh",
    "verify:blog": "tsx scripts/verify-blog-setup.ts",
    "security:full": "npm run security:test && npm run security:audit && npm run security:scan && npm run security:licenses && npm run security:sbom && npm run security:report",
    "deps:check": "npm-check-updates",
    "deps:update": "npm-check-updates -u"
  },
  "size-limit": [
    {
      "name": "Main app entry",
      "path": "dist/assets/js/index-*.js",
      "limit": "100 kB",
      "gzip": true
    },
    {
      "name": "React core libraries",
      "path": "dist/assets/js/react-core-*.js",
      "limit": "150 kB",
      "gzip": true
    },
    {
      "name": "React ecosystem",
      "path": "dist/assets/js/react-ecosystem-*.js",
      "limit": "120 kB",
      "gzip": true
    },
    {
      "name": "Supabase SDK",
      "path": "dist/assets/js/supabase-*.js",
      "limit": "120 kB",
      "gzip": true
    },
    {
      "name": "Stripe SDK",
      "path": "dist/assets/js/stripe-*.js",
      "limit": "80 kB",
      "gzip": true
    },
    {
      "name": "UI components (Headless UI)",
      "path": "dist/assets/js/ui-headless-*.js",
      "limit": "40 kB",
      "gzip": true
    },
    {
      "name": "Icons (Heroicons)",
      "path": "dist/assets/js/ui-icons-*.js",
      "limit": "30 kB",
      "gzip": true
    },
    {
      "name": "State management",
      "path": "dist/assets/js/state-*.js",
      "limit": "15 kB",
      "gzip": true
    },
    {
      "name": "Form validation",
      "path": "dist/assets/js/validation-*.js",
      "limit": "25 kB",
      "gzip": true
    },
    {
      "name": "Utilities",
      "path": "dist/assets/js/utils-*.js",
      "limit": "50 kB",
      "gzip": true
    },
    {
      "name": "HTTP client",
      "path": "dist/assets/js/http-*.js",
      "limit": "20 kB",
      "gzip": true
    },
    {
      "name": "Monitoring (Sentry)",
      "path": "dist/assets/js/monitoring-*.js",
      "limit": "60 kB",
      "gzip": true
    },
    {
      "name": "Other vendor code",
      "path": "dist/assets/js/vendor-*.js",
      "limit": "100 kB",
      "gzip": true
    },
    {
      "name": "Main CSS bundle",
      "path": "dist/assets/css/index-*.css",
      "limit": "20 kB",
      "gzip": true
    },
    {
      "name": "Total JavaScript (all chunks)",
      "path": "dist/assets/js/*.js",
      "limit": "900 kB",
      "gzip": true
    },
    {
      "name": "Initial load (critical path)",
      "path": [
        "dist/assets/js/index-*.js",
        "dist/assets/js/react-core-*.js",
        "dist/assets/css/index-*.css"
      ],
      "limit": "270 kB",
      "gzip": true,
      "running": false
    }
  ],
  "dependencies": {
    "@headlessui/react": "^2.2.4",
    "@heroicons/react": "^2.2.0",
    "@hookform/resolvers": "^3.10.0",
    "@radix-ui/react-slot": "^1.2.3",
    "@sentry/react": "^8.52.0",
    "@sentry/tracing": "^7.117.0",
    "@stripe/stripe-js": "^7.6.1",
    "@supabase/supabase-js": "^2.52.0",
    "@tanstack/react-query": "^5.83.0",
    "@types/express": "^5.0.3",
    "@types/ioredis": "^5.0.0",
    "@types/lodash": "^4.17.20",
    "@types/uuid": "^10.0.0",
    "axios": "^1.10.0",
    "bull": "^4.16.4",
    "date-fns": "^4.1.0",
    "express": "^5.1.0",
    "ioredis": "^5.4.1",
    "lodash": "^4.17.21",
    "playwright": "^1.54.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-error-boundary": "^6.0.0",
    "react-hook-form": "^7.60.0",
    "react-router-dom": "^7.7.0",
    "stripe": "^18.3.0",
    "tailwindcss": "^4.1.11",
    "uuid": "^11.1.0",
    "web-vitals": "^5.0.3",
    "zod": "^3.25.76",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@babel/preset-react": "^7.27.1",
    "@cyclonedx/cyclonedx-npm": "^1.19.3",
    "@eslint/js": "^9.30.1",
    "@netlify/functions": "^4.2.1",
    "@playwright/test": "^1.54.1",
    "@size-limit/preset-app": "^11.2.0",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/react-router-dom": "^5.3.3",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitest/coverage-v8": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "jsdom": "^26.1.0",
    "license-checker": "^25.0.1",
    "lint-staged": "^16.1.2",
    "npm-check-updates": "^17.1.12",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "rollup-plugin-visualizer": "^6.0.3",
    "snyk": "^1.1298.0",
    "tsx": "^4.20.0",
    "type-coverage": "^2.29.1",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.35.1",
    "vite": "^7.0.4",
    "vite-plugin-compression": "^0.5.1",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write",
      "vitest related --run --coverage=false"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "**/*": [
      "node scripts/pre-commit-secret-scan.js"
    ]
  }
}
